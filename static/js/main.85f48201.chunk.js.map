{"version":3,"sources":["assets/img/logo_transparent.png","assets/img/homepage-img.jpg","assets/img/MyPhoto.jpeg","assets/img/website-screenshot.jpg","components/Navbar.js","views/Home/HomePage.js","views/Projects/ProjectsPage.js","components/Emoji.js","components/MapContainer.js","components/MapSearchResults.js","views/WhatToEat/Tabs/EatOutTab.js","views/WhatToEat/Tabs/FoodDeliveryTab.js","components/DishViewModal.js","components/DishDeleteModal.js","components/DishEditModal.js","views/WhatToEat/Tabs/CookTab.js","views/WhatToEat/WhatToEatPage.js","App.js","components/Footer.js","serviceWorker.js","index.js"],"names":["module","exports","MyNavbar","state","collapseID","toggleCollapse","setState","prevState","color","fixed","dark","expand","scrolling","href","src","Logo","style","height","width","alt","className","onClick","this","id","isOpen","navbar","left","to","nav","caret","React","Component","HomePage","HomePageImg","lg","MyPhoto","md","size","icon","ProjectsPage","hover","waves","WebsiteScreenShot","overlay","Emoji","props","role","aria-label","label","aria-hidden","symbol","MapContainer","places","onMapReady","mapProps","map","searchNearby","center","google","request","location","radius","type","maps","PlacesService","nearbySearch","results","status","PlacesServiceStatus","OK","initialCenter","initialCoords","zoom","onReady","GoogleApiWrapper","apiKey","LoadingContainer","Listing","p","key","name","MapSearchResults","visible","EatOutTab","lat","lng","FoodDeliveryTab","DishViewModal","modal","toggle","titleClass","activeItem","date_added","additional_details","DishDeleteModal","onDelete","DishEditModal","group","onChange","valueDefault","validate","rows","onSave","cookingDishes","CookTab","useState","addDishesModal","setAddDishesModal","toggleAddDishesModal","setActiveItem","viewItemModal","setViewItemModal","toggleViewItemModal","deleteItemModal","setDeleteItemModal","toggleDeleteItemModal","editItemModal","setEditItemModal","toggleEditItemModal","handleChange","e","target","value","console","log","fluid","dish","title","item","entireList","index","indexOf","splice","handleEdit","length","push","WhatToEatPage","whichIsOpen","setWhichIsOpen","collapseCloseSpeed","setcollapseCloseSpeed","cookingIsOpen","setCookingIsOpen","foodDeliveryIsOpen","setFoodDeliveryIsOpen","eatOutiIsOpen","setEatOutIsOpen","openCookingCollapse","openFoodDeliveryCollapse","openEatOutCollapse","setCloseCollapseSpeed","trim","marginBottom","delay","hide","App","exact","path","component","Footer","fab","Date","getFullYear","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.85f48201.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo_transparent.7381fdcb.png\";","module.exports = __webpack_public_path__ + \"static/media/homepage-img.a241d8a6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/MyPhoto.c92d0cdb.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/website-screenshot.ae720baf.jpg\";","import React from 'react';\r\nimport {\r\n    MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavbarToggler,\r\n    MDBCollapse, MDBNavItem, MDBNavLink,\r\n    MDBDropdown, MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem\r\n} from 'mdbreact';\r\nimport Logo from '../assets/img/logo_transparent.png';\r\nimport '../assets/css/navbar.css';\r\n\r\nclass MyNavbar extends React.Component {\r\n    state = {\r\n        collapseID: \"\"\r\n    };\r\n\r\n    toggleCollapse = collapseID => () =>\r\n        this.setState(prevState => ({\r\n            collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\r\n        }));\r\n\r\n    render() {\r\n        return (\r\n            <MDBNavbar color=\"stylish-color-dark\" fixed=\"top\" dark expand=\"md\" scrolling>\r\n                <MDBNavbarBrand href=\"home\">\r\n                    <img  src={Logo} style={{ \r\n                        height: '1.5rem',\r\n                        width: '1.5rem',\r\n                        \"marginBottom\": '0.5rem',\r\n                        \"marginRight\": '0.5rem', }} alt=\"fireSpot\"/>\r\n                    <strong className=\"white-text\">ZCK Website</strong>\r\n                </MDBNavbarBrand>\r\n                <MDBNavbarToggler onClick={this.toggleCollapse(\"navbarCollapse\")} />\r\n                <MDBCollapse id=\"navbarCollapse\" isOpen={this.state.collapseID} navbar>\r\n                    <MDBNavbarNav left>\r\n                        <MDBNavItem>\r\n                            <MDBNavLink to={\"home\"}><strong>Home</strong></MDBNavLink>\r\n                        </MDBNavItem>\r\n                        <MDBNavItem>\r\n                            <MDBNavLink to={\"projects\"}><strong>Projects</strong></MDBNavLink>\r\n                        </MDBNavItem>\r\n                        <MDBNavItem>\r\n                            <MDBNavLink to={\"what-to-eat\"}><strong>What To Eat!</strong></MDBNavLink>\r\n                        </MDBNavItem>\r\n                        <MDBNavItem>\r\n                            <MDBDropdown className=\"mydropdown\">\r\n                                <MDBDropdownToggle nav caret>\r\n                                    <span className=\"mr-2\"><strong>Apps</strong></span>\r\n                                </MDBDropdownToggle>\r\n                                <MDBDropdownMenu className=\"mydropdown\">\r\n                                    <MDBDropdownItem className=\"mydropdownitems\" href=\"#!\">More coming soon!</MDBDropdownItem>\r\n                                </MDBDropdownMenu>\r\n                            </MDBDropdown>\r\n                        </MDBNavItem>\r\n                    </MDBNavbarNav>\r\n                </MDBCollapse>\r\n            </MDBNavbar>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyNavbar;","import React from \"react\";\r\nimport { MDBContainer, MDBView, MDBRow, MDBCol, MDBIcon, MDBMask } from \"mdbreact\";\r\nimport HomePageImg from \"../../assets/img/homepage-img.jpg\";\r\nimport MyPhoto from \"../../assets/img/MyPhoto.jpeg\";\r\n\r\nconst HomePage = () => {\r\n    return (\r\n        <div>\r\n            <header>\r\n                <MDBView src={HomePageImg}>\r\n                    <MDBMask className=\"flex-center flex-column text-white text-center\">\r\n                        <h2>Hi I'm Zac, welcome to my website!</h2>\r\n                        <h5>Scroll down for more info!</h5>\r\n                    </MDBMask>\r\n                </MDBView>\r\n            </header>\r\n            <main>\r\n                <MDBContainer>\r\n                    <section className=\"my-5\">\r\n                        <h2 className=\"h1-responsive font-weight-bold text-center my-5\">\r\n                            About Me\r\n                        </h2>\r\n                        <p className=\"w-responsive text-center mx-auto mb-4\">\r\n                            My name is Zac Koh, I'm from Penang, Malaysia but am currently based in Cambridge, UK.\r\n                            <br/>\r\n                            I am an aspiring software engineer that is currently on a graduate developer role with Barclays.\r\n                        </p>\r\n                        <h4 className=\"h5-responsive font-weight-bold text-center my-2\">My Goals for 2020:</h4>\r\n                        <ol className=\"w-responsive text-center mx-auto mb-5\">\r\n                            <li className=\"w-responsive text-center mx-auto\">\r\n                                Learn web development and deploy production-level code.\r\n                            </li>\r\n                            <li className=\"w-responsive text-center mx-auto\">\r\n                                Start with kaggle and participate in at least 2 competitions.\r\n                            </li>\r\n                        </ol>\r\n                        <MDBRow>\r\n                            <MDBCol lg=\"5\" className=\"mb-lg-0 mb-5\">\r\n                                <img\r\n                                    src={MyPhoto}\r\n                                    alt=\"Photograph of me\"\r\n                                    className=\"img-fluid rounded z-depth-3\"\r\n                                />\r\n                            </MDBCol>\r\n                            <MDBCol lg=\"7\">\r\n                                <MDBRow className=\"mb-3\">\r\n                                    <MDBCol md=\"1\" size=\"2\">\r\n                                        <MDBIcon icon=\"code\" size=\"2x\" className=\"indigo-text\" />\r\n                                    </MDBCol>\r\n                                    <MDBCol md=\"11\" size=\"10\">\r\n                                        <h5 className=\"font-weight-bold mb-3\">Technologies</h5>\r\n                                        <ul>\r\n                                            <li className=\"font-weight-bold\">Programming Languages</li>\r\n                                            <p className=\"mb-1\">\r\n                                                Python, JavaScript, C, C++, Java, Groovy\r\n                                            </p>\r\n                                            <li className=\"font-weight-bold\">Data Science/ML</li>\r\n                                            <p className=\"mb-1\">\r\n                                                PyTorch, Pandas, sklearn, numpy\r\n                                            </p>\r\n                                            <li className=\"font-weight-bold\">DevOps</li>\r\n                                            <p className=\"mb-1\">\r\n                                                Git, Bash, Nexus, Maven, TeamCity, Jenkins\r\n                                            </p>\r\n                                            <li className=\"font-weight-bold\">Web Development</li>\r\n                                            <p className=\"mb-1\">\r\n                                                django, React\r\n                                            </p>\r\n                                        </ul>\r\n                                    </MDBCol>\r\n                                </MDBRow>\r\n                                <MDBRow className=\"mb-3\">\r\n                                    <MDBCol md=\"1\" size=\"2\">\r\n                                        <MDBIcon icon=\"user-graduate\" size=\"2x\" className=\"pink-text\" />\r\n                                    </MDBCol>\r\n                                    <MDBCol md=\"11\" size=\"10\">\r\n                                        <h5 className=\"font-weight-bold mb-3\">Education</h5>\r\n                                        <p>\r\n                                            MEng Electronic Engineering with Artificial Intelligence<br/>\r\n                                            University of Southampton<br/>\r\n                                            <br/>\r\n                                            First Class Honours<br/>\r\n                                            Class of 2019\r\n                                        </p>\r\n                                    </MDBCol>\r\n                                </MDBRow>\r\n                                <MDBRow className=\"mb-3\">\r\n                                    <MDBCol md=\"1\" size=\"2\">\r\n                                        <MDBIcon icon=\"heart\" size=\"2x\" className=\"blue-text\" />\r\n                                    </MDBCol>\r\n                                    <MDBCol md=\"11\" size=\"10\">\r\n                                        <h5 className=\"font-weight-bold mb-3\">Interests</h5>\r\n                                        <p>\r\n                                        Cooking, Bouldering, Running\r\n                                        </p>\r\n                                    </MDBCol>\r\n                                </MDBRow>\r\n                            </MDBCol>\r\n                        </MDBRow>\r\n                    </section>\r\n                </MDBContainer>\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomePage;\r\n\r\n","import React from \"react\";\r\nimport {  MDBRow, MDBCol, MDBCard, MDBCardBody, MDBMask, MDBIcon, MDBView, MDBBtn } from \"mdbreact\";\r\nimport WebsiteScreenShot from \"../../assets/img/website-screenshot.jpg\";\r\n\r\nconst ProjectsPage = () => {\r\n  return (\r\n    <MDBCard className=\"my-5 px-5 pb-5 light-grey-background z-depth-0\">\r\n      <MDBCardBody>\r\n        <h2 className=\"h1-responsive font-weight-bold text-center my-5\">\r\n          My Recent Projects\r\n        </h2>\r\n        <p className=\"text-center w-responsive mx-auto mb-5\">\r\n          Below are a list of my recent projects that I've been working on. Please check them out!\r\n        </p>\r\n        <MDBRow>\r\n          <MDBCol lg=\"5\">\r\n            <MDBView className=\"rounded z-depth-2 mb-lg-0 mb-4\" hover waves>\r\n              <img\r\n                className=\"img-fluid\"\r\n                src={WebsiteScreenShot}\r\n                alt=\"\"\r\n              />\r\n              <a href=\"#!\">\r\n                <MDBMask overlay=\"white-slight\" />\r\n              </a>\r\n            </MDBView>\r\n          </MDBCol>\r\n          <MDBCol lg=\"7\">\r\n            <a href=\"#!\" className=\"green-text\">\r\n              <h6 className=\"font-weight-bold mb-3\">\r\n                <MDBIcon icon=\"utensils\" className=\"pr-2\" />\r\n                Web Development\r\n              </h6>\r\n            </a>\r\n            <h3 className=\"font-weight-bold mb-3 p-0\">\r\n              <strong>My personal website and web app</strong>\r\n            </h3>\r\n            <p>\r\n              Nam libero tempore, cum soluta nobis est eligendi optio cumque\r\n              nihil impedit quo minus id quod maxime placeat facere possimus,\r\n              omnis voluptas assumenda est, omnis dolor repellendus et aut\r\n              officiis debitis.\r\n            </p>\r\n            <p>\r\n              Date: Nov 2019 - Feb 2020\r\n            </p>\r\n            <MDBBtn color=\"success\" size=\"md\" className=\"waves-light \">\r\n              Read more\r\n            </MDBBtn>\r\n          </MDBCol>\r\n        </MDBRow>\r\n        <hr className=\"my-5\" />\r\n        <MDBRow>\r\n          <MDBCol lg=\"7\">\r\n            <a href=\"#!\" className=\"pink-text\">\r\n              <h6 className=\"font-weight-bold mb-3\">\r\n                <MDBIcon icon=\"image\" className=\"pr-2\" />\r\n                Deep Learning\r\n              </h6>\r\n            </a>\r\n            <h3 className=\"font-weight-bold mb-3 p-0\">\r\n              <strong>Re-implementation of Music Transformer</strong>\r\n            </h3>\r\n            <p>\r\n              At vero eos et accusamus et iusto odio dignissimos ducimus qui\r\n              blanditiis praesentium voluptatum deleniti atque corrupti quos\r\n              dolores et quas molestias excepturi sint occaecati cupiditate\r\n              non provident.\r\n            </p>\r\n            <p>\r\n              Date: March 2019 - May 2019\r\n            </p>\r\n            <MDBBtn\r\n              color=\"pink\"\r\n              size=\"md\"\r\n              className=\"mb-lg-0 mb-4 waves-light\"\r\n            >\r\n              Read more\r\n            </MDBBtn>\r\n          </MDBCol>\r\n          <MDBCol lg=\"5\">\r\n            <MDBView className=\"rounded z-depth-2 mb-lg-0 mb-4\" hover waves>\r\n              <img\r\n                className=\"img-fluid\"\r\n                src=\"https://mdbootstrap.com/img/Photos/Others/img%20(34).jpg\"\r\n                alt=\"\"\r\n              />\r\n              <a href=\"#!\">\r\n                <MDBMask overlay=\"white-slight\" />\r\n              </a>\r\n            </MDBView>\r\n          </MDBCol>\r\n        </MDBRow>\r\n        <hr className=\"my-5\" />\r\n        <MDBRow>\r\n          <MDBCol lg=\"5\">\r\n            <MDBView className=\"rounded z-depth-2 mb-lg-0 mb-4\" hover waves>\r\n              <img\r\n                className=\"img-fluid\"\r\n                src=\"https://mdbootstrap.com/img/Photos/Others/img (28).jpg\"\r\n                alt=\"\"\r\n              />\r\n              <a href=\"#!\">\r\n                <MDBMask overlay=\"white-slight\" />\r\n              </a>\r\n            </MDBView>\r\n          </MDBCol>\r\n          <MDBCol lg=\"7\">\r\n            <a href=\"#!\" className=\"indigo-text\">\r\n              <h6 className=\"font-weight-bold mb-3\">\r\n                <MDBIcon icon=\"suitcase\" className=\"pr-2\" />\r\n                Food\r\n              </h6>\r\n            </a>\r\n            <h3 className=\"font-weight-bold mb-3 p-0\">\r\n              <strong>Scene Classifier</strong>\r\n            </h3>\r\n            <p>\r\n              Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit\r\n              aut fugit, sed quia consequuntur magni dolores eos qui ratione\r\n              voluptatem sequi nesciunt. Neque porro qui dolorem ipsum quia\r\n              sit amet.\r\n            </p>\r\n            <p>\r\n              Date: Nov 2018 - Jan 2018\r\n            </p>\r\n            <MDBBtn color=\"indigo\" size=\"md\" className=\"waves-light \">\r\n              Read more\r\n            </MDBBtn>\r\n          </MDBCol>\r\n        </MDBRow>\r\n      </MDBCardBody>\r\n    </MDBCard>\r\n  );\r\n}\r\n\r\nexport default ProjectsPage;","import React from 'react';\r\nconst Emoji = props => (\r\n    <span\r\n        className=\"emoji\"\r\n        role=\"img\"\r\n        aria-label={props.label ? props.label : \"\"}\r\n        aria-hidden={props.label ? \"false\" : \"true\"}\r\n    >\r\n        {props.symbol}\r\n    </span>\r\n);\r\nexport default Emoji;","import React, { Component } from 'react';\r\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from 'google-maps-react';\r\nimport '../assets/css/map.css';\r\n\r\nconst Listing = ({ places }) => (\r\n    <ul>{places && places.map(p => <li key={p.id}>{p.name}</li>)}</ul>\r\n);\r\n\r\nexport class MapContainer extends Component {\r\n    state = {\r\n        places: []\r\n    };\r\n\r\n    onMapReady = (mapProps, map) => this.searchNearby(map, map.center);\r\n\r\n    searchNearby = (map, center) => {\r\n        const { google } = this.props;\r\n\r\n        const service = new google.maps.places.PlacesService(map);\r\n\r\n        // Specify location, radius and place types for your Places API search.\r\n        const request = {\r\n            location: center,\r\n            radius: '1000',\r\n            type: ['restaurant']\r\n        };\r\n\r\n        service.nearbySearch(request, (results, status) => {\r\n            if (status === google.maps.places.PlacesServiceStatus.OK)\r\n                this.setState({ places: results });\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Map\r\n                // onClick={this.onMapClicked}\r\n                // centerAroundCurrentLocation\r\n                initialCenter={this.props.initialCoords}\r\n                className=\"map-box\"\r\n                google={this.props.google}\r\n                zoom={14}\r\n                onReady={this.onMapReady}\r\n            >\r\n            </Map>\r\n        );\r\n    }\r\n}\r\n\r\nconst LoadingContainer = (props) => (\r\n    <div>Fancy loading container!</div>\r\n)\r\n\r\nexport default GoogleApiWrapper({\r\n    apiKey: 'AIzaSyBlE2qsjqK3S_3Mh3M_oVjwvqGjRIJ8644',\r\n    LoadingContainer: LoadingContainer\r\n})(MapContainer);","import React, { Component } from 'react';\r\nimport { Map, GoogleApiWrapper } from 'google-maps-react';\r\nimport '../assets/css/map.css';\r\n\r\nconst Listing = ({ places }) => (\r\n    <ul>{places && places.map(p => <li key={p.id}>{p.name}</li>)}</ul>\r\n);\r\n\r\nexport class MapSearchResults extends Component {\r\n    state = {\r\n        places: []\r\n    };\r\n\r\n    onMapReady = (mapProps, map) => this.searchNearby(map, map.center);\r\n\r\n    searchNearby = (map, center) => {\r\n        const { google } = this.props;\r\n\r\n        const service = new google.maps.places.PlacesService(map);\r\n\r\n        // Specify location, radius and place types for your Places API search.\r\n        const request = {\r\n            location: center,\r\n            radius: '1000',\r\n            type: ['restaurant']\r\n        };\r\n\r\n        service.nearbySearch(request, (results, status) => {\r\n            if (status === google.maps.places.PlacesServiceStatus.OK)\r\n                this.setState({ places: results });\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Map\r\n                className=\"map\"\r\n                google={this.props.google}\r\n                onReady={this.onMapReady}\r\n                visible={false}\r\n                initialCenter={this.props.initialCoords}\r\n            >\r\n                <Listing places={this.state.places} />\r\n            </Map>\r\n        );\r\n    }\r\n}\r\n\r\nconst LoadingContainer = (props) => (\r\n    <div>Fancy loading container!</div>\r\n)\r\n\r\nexport default GoogleApiWrapper({\r\n    apiKey: 'AIzaSyBlE2qsjqK3S_3Mh3M_oVjwvqGjRIJ8644',\r\n    LoadingContainer: LoadingContainer\r\n})(MapSearchResults);","import React, { useState } from \"react\";\r\nimport {\r\n    MDBContainer, MDBView, MDBRow, MDBCol,\r\n    MDBIcon, MDBMask, MDBCard, MDBCardBody,\r\n    MDBBtn, MDBCollapse\r\n} from \"mdbreact\";\r\nimport MapContainer from '../../../components/MapContainer.js';\r\nimport MapSearchResults from '../../../components/MapSearchResults.js';\r\nimport '../../../assets/css/map.css';\r\n\r\nconst EatOutTab = () => {\r\n    return (\r\n        <MDBContainer>\r\n            <p>\r\n                This should show up if EATING OUT!\r\n            </p>\r\n            {/* Pass in coordinates that is provided */}\r\n\r\n            <div className=\"map-wrapper\">\r\n                <MapContainer initialCoords={{ lat: 52.1942, lng: 0.1374 }} />\r\n            </div>\r\n            <MDBContainer>\r\n            <MapSearchResults initialCoords={{ lat: 52.1942, lng: 0.1374 }} />\r\n            </MDBContainer>\r\n        </MDBContainer>\r\n    );\r\n}\r\n\r\nexport default EatOutTab;","import React from \"react\";\r\n\r\nconst FoodDeliveryTab = () => {\r\n    return (\r\n        <h3>\r\n            Food delivery tab coming soon!\r\n        </h3>\r\n    );\r\n}\r\n\r\nexport default FoodDeliveryTab;\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport {\r\n    MDBBtn, MDBModal, MDBModalBody, MDBModalFooter, MDBModalHeader\r\n} from \"mdbreact\";\r\n\r\nconst DishViewModal = (props) => {\r\n    return (\r\n        <MDBModal isOpen={props.modal} toggle={props.toggle}>\r\n            <MDBModalHeader \r\n                toggle={props.toggle}\r\n                className='text-center'\r\n                titleClass='w-100 font-weight-bold'\r\n            >\r\n                { props.activeItem.name }\r\n            </MDBModalHeader>\r\n            <MDBModalBody>\r\n                Date Added: { props.activeItem.date_added }<br/>\r\n                Additional Details:<br/>\r\n                { props.activeItem.additional_details }\r\n            </MDBModalBody>\r\n            <MDBModalFooter>\r\n            <MDBBtn color='secondary' onClick={props.toggle}>\r\n                Close\r\n            </MDBBtn>\r\n            </MDBModalFooter>\r\n        </MDBModal>\r\n    );\r\n}\r\n\r\n\r\nexport default DishViewModal;","import React from \"react\";\r\nimport {\r\n    MDBBtn, MDBModal, MDBModalBody, MDBModalFooter, MDBModalHeader\r\n} from \"mdbreact\";\r\n\r\nconst DishDeleteModal = (props) => {\r\n    // Create onClick function for delete\r\n    // must include props.toggle to close the modal\r\n    return (\r\n        <MDBModal isOpen={props.modal} toggle={props.toggle}>\r\n            <MDBModalHeader \r\n                toggle={props.toggle}\r\n                className='text-center'\r\n                titleClass='w-100 font-weight-bold'\r\n            >\r\n                Delete Dish: { props.activeItem.name }\r\n            </MDBModalHeader>\r\n            <MDBModalBody>\r\n                <h3>\r\n                    Are you sure you want to delete the following dish?\r\n                </h3>\r\n                <p>\r\n                Date Added: { props.activeItem.date_added }<br/>\r\n                Additional Details:<br/>\r\n                { props.activeItem.additional_details }\r\n                </p>\r\n            </MDBModalBody>\r\n            <MDBModalFooter>\r\n            <MDBBtn color=\"primary\" onClick={props.toggle}>\r\n                Back\r\n            </MDBBtn>\r\n            <MDBBtn color=\"danger\" onClick={props.onDelete}>\r\n                Delete\r\n            </MDBBtn>\r\n            </MDBModalFooter>\r\n        </MDBModal>\r\n    );\r\n}\r\n\r\n\r\nexport default DishDeleteModal;","import React from \"react\";\r\nimport {\r\n    MDBBtn, MDBInput, MDBModal, MDBModalBody, MDBModalFooter, MDBModalHeader\r\n} from \"mdbreact\";\r\n\r\nconst DishEditModal = (props) => {\r\n    // Create onClick function for delete\r\n    // must include props.toggle to close the modal\r\n    return (\r\n        <MDBModal isOpen={props.modal} toggle={props.toggle}>\r\n            <MDBModalHeader \r\n                toggle={props.toggle}\r\n                className='text-center'\r\n                titleClass='w-100 font-weight-bold'\r\n            >\r\n                Edit Dish: { props.activeItem.name }\r\n            </MDBModalHeader>\r\n            <MDBModalBody>\r\n            <form className='mx-3 grey-text'>\r\n                <MDBInput\r\n                    label='Dish Name'\r\n                    name=\"name\"\r\n                    group\r\n                    type='text'\r\n                    onChange={props.onChange}\r\n                    valueDefault={props.activeItem.name}\r\n                    validate\r\n                />\r\n                <MDBInput\r\n                    type='textarea'\r\n                    name=\"additional_details\"\r\n                    rows='3'\r\n                    label='Additional Details'\r\n                    valueDefault={props.activeItem.additional_details}\r\n                    onChange={props.onChange}\r\n                />\r\n            </form>\r\n            </MDBModalBody>\r\n            <MDBModalFooter>\r\n            <MDBBtn color=\"secondary\" onClick={props.toggle}>\r\n                Close\r\n            </MDBBtn>\r\n            <MDBBtn color=\"primary\" onClick={props.onSave}>\r\n                Update\r\n            </MDBBtn>\r\n            </MDBModalFooter>\r\n        </MDBModal>\r\n    );\r\n}\r\n\r\n\r\nexport default DishEditModal;","import React, { useState } from \"react\";\r\nimport {\r\n    MDBContainer,\r\n    MDBBtn, MDBInput, MDBModal, MDBModalBody, MDBModalFooter, MDBModalHeader\r\n} from \"mdbreact\";\r\n\r\nimport DishViewModal from \"../../../components/DishViewModal.js\";\r\nimport DishDeleteModal from \"../../../components/DishDeleteModal.js\";\r\nimport DishEditModal from \"../../../components/DishEditModal.js\";\r\n\r\nconst cookingDishes = [\r\n    {\r\n        id: 1,\r\n        name: \"Rougaille with meat\",\r\n        additional_details: \"Thyme, tomatoes, onion, red pasta sauce, meat\\r\\n\\r\\nPossible meat options:\\r\\n- Sausage\\r\\n- Salmon\\r\\n- Beef\\r\\n- Pork\\r\\n- Chicken\",\r\n        // date_added: \"2020-01-11T23:59:02.861306Z\"\r\n    },\r\n    {\r\n        id: 2,\r\n        name: \"Coca-Cola Chicken Wings\",\r\n        additional_details: \"Coca-cola, chicken wings, ginger, soy sauce, sesame seeds\",\r\n        // date_added: \"2020-01-12T09:07:23.252530Z\"\r\n    }\r\n];\r\n\r\n\r\n\r\n\r\nconst CookTab = () => {\r\n    const [addDishesModal, setAddDishesModal] = useState(false);\r\n    const toggleAddDishesModal = () => { setAddDishesModal(!addDishesModal); }\r\n\r\n    const [activeItem, setActiveItem] = useState(\r\n        {\r\n            id: \"\",\r\n            name: \"\",\r\n            additional_details: \"\",\r\n            date_added: \"\"\r\n        }\r\n    );\r\n\r\n    const [viewItemModal, setViewItemModal] = useState(false);\r\n    const toggleViewItemModal = () => { setViewItemModal(!viewItemModal); }    \r\n\r\n    const viewItem = item => {\r\n        toggleViewItemModal();\r\n        setActiveItem(item);\r\n    };\r\n\r\n    const [deleteItemModal, setDeleteItemModal] = useState(false);\r\n    const toggleDeleteItemModal = () => { setDeleteItemModal(!deleteItemModal); }    \r\n\r\n    const deleteItem = item => {\r\n        toggleDeleteItemModal();\r\n        setActiveItem(item);\r\n    };\r\n\r\n    const [editItemModal, setEditItemModal] = useState(false);\r\n    const toggleEditItemModal = () => { setEditItemModal(!editItemModal); }    \r\n\r\n    const editItem = item => {\r\n        toggleEditItemModal();\r\n        setActiveItem(item);\r\n    };\r\n\r\n\r\n\r\n    const DisplayDishes = cookingDishes => {    \r\n        return cookingDishes.map(dish => (\r\n            <li\r\n                key={dish.id}\r\n                className=\"list-group-item d-flex justify-content-between align-items-center\"\r\n            >\r\n            <span\r\n              title={dish.name}\r\n            >\r\n              {dish.name}\r\n            </span>\r\n            <span>\r\n              <MDBBtn color=\"info\" onClick={ () => {viewItem(dish);} }>View</MDBBtn>\r\n              <MDBBtn color=\"warning\" onClick={ () => {editItem(dish);} }>Edit</MDBBtn>\r\n              <MDBBtn color=\"danger\" onClick={ () => {deleteItem(dish);} }>Delete</MDBBtn>\r\n            </span>\r\n          </li>\r\n        ));\r\n    };\r\n\r\n    const handleChange = e => {\r\n        let { name, value } = e.target;\r\n        setActiveItem({ ...activeItem, [name]: value });\r\n        console.log(activeItem);\r\n    };\r\n\r\n    const onSave = (item, entireList) => {\r\n        // alert(\"save\" + JSON.stringify(item));\r\n        item.id=entireList[entireList.length-1].id + 1\r\n        entireList.push(item);\r\n        toggleAddDishesModal();\r\n    };\r\n\r\n    const onDelete = (item, entireList) => {\r\n        let index = entireList.indexOf(item);\r\n        entireList.splice(index,1);\r\n        toggleDeleteItemModal();\r\n    }\r\n\r\n    const handleEdit = (item, entireList) => {\r\n        let index = entireList.indexOf(item);\r\n        entireList[index]=item;\r\n        toggleEditItemModal();\r\n    };\r\n\r\n    return (\r\n        <MDBContainer>\r\n            <h3>\r\n                Cook at home!\r\n            </h3>\r\n            <MDBContainer fluid>\r\n                <MDBBtn\r\n                    color=\"primary\"\r\n                    onClick={ () => { toggleAddDishesModal();} }\r\n                    style={{ \"textTransform\": \"none\" }}\r\n                >\r\n                    Add a New Dish\r\n                </MDBBtn>\r\n                <MDBBtn\r\n                    color=\"green\" \r\n                    style={{ \"textTransform\": \"none\" }}\r\n                >\r\n                    Randomly Choose a Dish\r\n                </MDBBtn>\r\n            </MDBContainer>\r\n            {DisplayDishes(cookingDishes)}\r\n            <DishViewModal\r\n                activeItem={activeItem}\r\n                toggle={toggleViewItemModal}\r\n                modal={viewItemModal}\r\n            />\r\n            <DishDeleteModal\r\n                activeItem={activeItem}\r\n                toggle={toggleDeleteItemModal}\r\n                modal={deleteItemModal}\r\n                onDelete={ () => {onDelete(activeItem, cookingDishes)} }\r\n            />\r\n            <DishEditModal\r\n                activeItem={activeItem}\r\n                toggle={toggleEditItemModal}\r\n                modal={editItemModal}\r\n                onSave={ () => {handleEdit(activeItem, cookingDishes)} }\r\n                onChange={handleChange}\r\n            />\r\n            <MDBModal isOpen={addDishesModal} toggle={ () => { toggleAddDishesModal();} }>\r\n                <MDBModalHeader \r\n                    toggle={() => { toggleAddDishesModal();} }\r\n                    className='text-center'\r\n                    titleClass='w-100 font-weight-bold'\r\n                >\r\n                    Add a New Dish\r\n                </MDBModalHeader>\r\n                <MDBModalBody>\r\n                    <form className='mx-3 grey-text'>\r\n                        <MDBInput\r\n                            label='Dish Name'\r\n                            name=\"name\"\r\n                            group\r\n                            type='text'\r\n                            onChange={handleChange}\r\n                            validate\r\n                        />\r\n                        <MDBInput\r\n                            type='textarea'\r\n                            name=\"additional_details\"\r\n                            rows='3'\r\n                            label='Additional Details'\r\n                            onChange={handleChange}\r\n                        />\r\n                    </form>\r\n                </MDBModalBody>\r\n                <MDBModalFooter>\r\n                    <MDBBtn color='secondary' onClick={ () => { toggleAddDishesModal();} }>\r\n                        Close\r\n                    </MDBBtn>\r\n                    <MDBBtn color='primary' onClick={ () => onSave(activeItem, cookingDishes)}>Save</MDBBtn>\r\n                </MDBModalFooter>\r\n            </MDBModal>\r\n        </MDBContainer>\r\n    );\r\n}\r\n\r\nexport default CookTab;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n    MDBContainer, MDBBtn, MDBCollapse\r\n} from \"mdbreact\";\r\nimport Emoji from '../../components/Emoji.js';\r\nimport EatOutTab from './Tabs/EatOutTab.js';\r\nimport FoodDeliveryTab from './Tabs/FoodDeliveryTab.js';\r\nimport CookTab from './Tabs/CookTab.js';\r\n\r\n\r\nconst WhatToEatPage = () => {\r\n    const [whichIsOpen, setWhichIsOpen] = useState(\"\");\r\n    const [collapseCloseSpeed, setcollapseCloseSpeed] = useState(0);\r\n\r\n    const [cookingIsOpen, setCookingIsOpen] = useState(false);\r\n    const toggleCooking = () => setCookingIsOpen(!cookingIsOpen);\r\n\r\n    const [foodDeliveryIsOpen, setFoodDeliveryIsOpen] = useState(false);\r\n    const toggleFoodDelivery = () => setFoodDeliveryIsOpen(!foodDeliveryIsOpen);\r\n\r\n    const [eatOutiIsOpen, setEatOutIsOpen] = useState(false);\r\n    const toogleEatOut = () => setEatOutIsOpen(!eatOutiIsOpen);\r\n\r\n    const openCookingCollapse = () => {\r\n        toggleCooking();\r\n        setWhichIsOpen(\"Cooking\");\r\n        setFoodDeliveryIsOpen(false);\r\n        setEatOutIsOpen(false);\r\n    }\r\n\r\n    const openFoodDeliveryCollapse = () => {\r\n        setCookingIsOpen(false);\r\n        toggleFoodDelivery();\r\n        setWhichIsOpen(\"Food Delivery\");\r\n        setEatOutIsOpen(false);\r\n    }\r\n\r\n    const openEatOutCollapse = () => {\r\n        setCookingIsOpen(false);\r\n        setFoodDeliveryIsOpen(false);\r\n        toogleEatOut();\r\n        setWhichIsOpen(\"Eat Out\");\r\n    }\r\n\r\n    const setCloseCollapseSpeed = (id) => {\r\n        if (id.trim() === whichIsOpen.trim()) {\r\n            setcollapseCloseSpeed(1500);\r\n        } else {\r\n            setcollapseCloseSpeed(0);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <MDBContainer fluid className=\"my-5 pb-5 pt-5 text-center justify-content-center\">\r\n            <h1>What To Eat!</h1>\r\n            <MDBContainer fluid>\r\n                <MDBBtn\r\n                    color=\"dark\"\r\n                    onClick={() => { openCookingCollapse(); setCloseCollapseSpeed(\"Cooking\");}}\r\n                    style={{ marginBottom: \"1rem\", \"textTransform\": \"none\" }}\r\n                >\r\n                    Cook? (Save <Emoji symbol=\"💲💲\" />)\r\n                </MDBBtn>\r\n                <MDBBtn\r\n                    color=\"purple\"\r\n                    onClick={() => { openFoodDeliveryCollapse(); setCloseCollapseSpeed(\"Food Delivery\");}}\r\n                    style={{ marginBottom: \"1rem\", \"textTransform\": \"none\" }}\r\n                >\r\n                    Food Delivery? (Spend <Emoji symbol=\"💲💲\" />)\r\n                </MDBBtn>\r\n                <MDBBtn\r\n                    size=\"large\"\r\n                    color=\"blue\"\r\n                    onClick={() => { openEatOutCollapse(); setCloseCollapseSpeed(\"Eat Out\");}}\r\n                    style={{ marginBottom: \"1rem\", \"textTransform\": \"none\" }}\r\n                >\r\n                    Eat Out? (Spend <Emoji symbol=\"💲💲\" />)\r\n                </MDBBtn>\r\n                <MDBCollapse id=\"eatingInCollapse\" delay={{hide: collapseCloseSpeed}} isOpen={cookingIsOpen}>\r\n                    <CookTab />\r\n                </MDBCollapse>\r\n                <MDBCollapse id=\"eatingOutCollapse\" delay={{hide: collapseCloseSpeed}} isOpen={eatOutiIsOpen}>\r\n                    <EatOutTab />\r\n                </MDBCollapse>\r\n                <MDBCollapse id=\"foodDeliveryCollapse\" delay={{hide: collapseCloseSpeed}} isOpen={foodDeliveryIsOpen}>\r\n                    <FoodDeliveryTab />\r\n                </MDBCollapse>\r\n            </MDBContainer>\r\n        </MDBContainer>\r\n    );\r\n}\r\n\r\nexport default WhatToEatPage;","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport MyNavBar from './components/Navbar.js';\nimport HomePage from './views/Home/HomePage.js';\nimport ProjectsPage from './views/Projects/ProjectsPage.js';\nimport WhatToEatPage from './views/WhatToEat/WhatToEatPage.js';\n\nfunction App() {\n    return (\n        <div className=\"content\">\n            <Router>\n                <MyNavBar />\n                <Switch>\n                    <Route exact path=\"/home\" component={HomePage} />\n                    <Route exact path=\"/projects\" component={ProjectsPage} />\n                    <Route exact path=\"/what-to-eat\" component={WhatToEatPage} />\n                    <Route exact path=\"/\" component={HomePage} />\n                    {/* TODO: CREATE ERROR 404 NO MATCH page */}\n                    <Route component={HomePage} />\n                </Switch>\n            </Router>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\r\nimport { MDBFooter, MDBIcon, MDBContainer, MDBBtn } from 'mdbreact';\r\nimport Emoji from '../components/Emoji.js';\r\nimport \"../assets/css/footer.css\";\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <MDBFooter color=\"stylish-color-dark\" className=\"font-small pt-4 mt-4 footer\">\r\n            <MDBContainer fluid className=\"text-center d-flex justify-content-center\">\r\n                <h5 className=\"title\">Contact Details</h5>\r\n            </MDBContainer>\r\n            <MDBContainer id=\"contacts-container\" fluid className=\"text-center justify-content-center\">\r\n                <MDBBtn size=\"lg\" href=\"https://github.com/zckoh\" target=\"_blank\" id=\"github-button\">\r\n                    <MDBIcon fab icon=\"github\" className=\"pr-1\" /> Github\r\n                </MDBBtn>\r\n                <MDBBtn size=\"lg\" href=\"http://www.linkedin.com/in/zackoh\" target=\"_blank\" id=\"linkedin-button\">\r\n                    <MDBIcon fab icon=\"linkedin-in\" className=\"pr-1\" /> Linkedin\r\n                </MDBBtn>\r\n                <MDBBtn size=\"lg\" href=\"mailto:zckoh96@gmail.com\" id=\"email-button\" color=\"grey\">\r\n                    <MDBIcon icon=\"envelope\" className=\"pr-1\" /> Email\r\n                </MDBBtn>\r\n            </MDBContainer>\r\n            <div className=\"footer-copyright text-center py-3 d-flex justify-content-center\">\r\n                <MDBContainer fluid>\r\n                    &copy; {new Date().getFullYear()} Copyright: Created by Zac with <Emoji symbol=\"🧡\" />\r\n                </MDBContainer>\r\n            </div>\r\n        </MDBFooter>\r\n    );\r\n}\r\n\r\nexport default Footer;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport './index.css';\nimport App from './App';\nimport Footer from \"./components/Footer\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render( [<App key=\"1\"/>, <Footer key=\"2\"/>] , document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}