{"version":3,"sources":["assets/img/logo_transparent.png","assets/img/homepage-img.jpg","assets/img/MyPhoto.jpeg","assets/img/website-screenshot.jpg","assets/img/scene-classifier-screenshot.jpg","components/GoogleMap.js","components/Navbar.js","views/Home/HomePage.js","views/Projects/ProjectsPage.js","components/Emoji.js","views/WhatToEat/Tabs/EatOutTab.js","views/WhatToEat/Tabs/FoodDeliveryTab.js","components/DishViewModal.js","components/DishDeleteModal.js","components/DishEditModal.js","components/RandomDishModal.js","views/WhatToEat/Tabs/CookingDishes.js","views/WhatToEat/Tabs/CookTab.js","views/WhatToEat/WhatToEatPage.js","views/Error404Page.js","App.js","components/Footer.js","serviceWorker.js","index.js"],"names":["module","exports","map","infowindow","MyNavbar","useState","collapsed","setCollapsed","node","useRef","handleClickOutside","e","current","contains","target","useEffect","document","addEventListener","removeEventListener","ref","color","fixed","dark","expand","scrolling","href","src","Logo","style","height","width","alt","className","onClick","id","isOpen","navbar","left","to","nav","caret","HomePage","HomePageImg","lg","MyPhoto","md","size","icon","ProjectsPage","hover","waves","WebsiteScreenShot","overlay","fab","SceneClassifierScreenshot","Emoji","props","role","aria-label","label","aria-hidden","symbol","allMarkers","GoogleMap","displayRestaurants","restaurants","loadedInitialSearchResult","restaurant","key","title","name","handleRandomClick","randomIndex","Math","floor","random","places","length","randomItem","close","setContent","open","onScriptLoad","bind","place","marker","window","google","maps","Marker","position","geometry","location","push","event","addListener","this","results","status","pagination","PlacesServiceStatus","OK","concat","i","createMarker","getNextPage","hasNextPage","nextPage","Map","getElementById","options","InfoWindow","request","LatLng","radius","type","PlacesService","nearbySearch","callback","s","createElement","x","getElementsByTagName","parentNode","insertBefore","Component","EatOutTab","center","lat","lng","zoom","FoodDeliveryTab","DishViewModal","modal","toggle","titleClass","activeItem","disabled","group","onChange","valueDefault","validate","rows","additional_details","DishDeleteModal","date_added","onDelete","DishEditModal","onSave","RandomDishModal","value","onRandomClick","CookingDishes","CookTab","addDishesModal","setAddDishesModal","toggleAddDishesModal","setActiveItem","viewItemModal","setViewItemModal","toggleViewItemModal","deleteItemModal","setDeleteItemModal","toggleDeleteItemModal","editItemModal","setEditItemModal","toggleEditItemModal","randomItemModal","setRandomItemModal","toggleRandomItemModal","handleChange","console","log","fluid","dish","item","entireList","index","indexOf","splice","handleEdit","WhatToEatPage","whichIsOpen","setWhichIsOpen","collapseCloseSpeed","setcollapseCloseSpeed","cookingIsOpen","setCookingIsOpen","foodDeliveryIsOpen","setFoodDeliveryIsOpen","eatOutiIsOpen","setEatOutIsOpen","openCookingCollapse","openFoodDeliveryCollapse","openEatOutCollapse","setCloseCollapseSpeed","trim","marginBottom","delay","hide","Error404Page","App","exact","path","component","Footer","Date","getFullYear","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fc7bde9b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo_transparent.7381fdcb.png\";","module.exports = __webpack_public_path__ + \"static/media/homepage-img.a241d8a6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/MyPhoto.c92d0cdb.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/website-screenshot.ae720baf.jpg\";","module.exports = __webpack_public_path__ + \"static/media/scene-classifier-screenshot.8bd0f9f2.jpg\";","import React, { Component } from 'react';\r\nimport '../assets/css/map.css';\r\nimport { MDBContainer, MDBBtn } from 'mdbreact';\r\n\r\nvar map;\r\nvar infowindow;\r\nvar allMarkers = [];\r\n\r\nclass GoogleMap extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onScriptLoad = this.onScriptLoad.bind(this);\r\n        var genNextPage = null;\r\n    }\r\n\r\n    createMarker(place) {\r\n        var marker = new window.google.maps.Marker({\r\n            map: map,\r\n            position: place.geometry.location\r\n        });\r\n        allMarkers.push(marker);\r\n\r\n        window.google.maps.event.addListener(marker, 'click', function () {\r\n            infowindow.setContent(place.name);\r\n            infowindow.open(map, this);\r\n        });\r\n    }\r\n\r\n    callback(results, status, pagination) {\r\n        if (status === window.google.maps.places.PlacesServiceStatus.OK) {\r\n            if (!this.loadedInitialSearchResult) {\r\n                this.places = results;\r\n                this.loadedInitialSearchResult = true;\r\n            } else {\r\n                this.places = results.concat(this.places);\r\n            }\r\n            for (var i = 0; i < results.length; i++) {\r\n                this.createMarker(results[i]);\r\n            }\r\n            this.getNextPage = pagination.hasNextPage && function () {\r\n                pagination.nextPage();\r\n            };\r\n        }\r\n    };\r\n\r\n    onScriptLoad() {\r\n        map = new window.google.maps.Map(\r\n            document.getElementById(this.props.id),\r\n            this.props.options);\r\n        infowindow = new window.google.maps.InfoWindow();\r\n        var cambridge = new window.google.maps.LatLng(52.1942, 0.1374);\r\n\r\n        var request = {\r\n            location: cambridge,\r\n            radius: '700',\r\n            type: ['restaurant']\r\n        };\r\n\r\n        var service = new window.google.maps.places.PlacesService(map);\r\n        service.nearbySearch(request, this.callback.bind(this));\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!window.google) {\r\n            const ApiKey = 'AIzaSyBlE2qsjqK3S_3Mh3M_oVjwvqGjRIJ8644';\r\n            var s = document.createElement('script');\r\n            s.type = 'text/javascript';\r\n            s.src = `https://maps.google.com/maps/api/js?key=${ApiKey}&libraries=places`;\r\n            var x = document.getElementsByTagName('script')[0];\r\n            x.parentNode.insertBefore(s, x);\r\n            // Below is important. \r\n            //We cannot access google.maps until it's finished loading\r\n            s.addEventListener('load', e => {\r\n                this.onScriptLoad();\r\n            })\r\n        } else {\r\n            this.onScriptLoad();\r\n        }\r\n    }\r\n\r\n    displayRestaurants = restaurants => {    \r\n        if (!this.loadedInitialSearchResult) {\r\n            return null;\r\n        } else {\r\n            return restaurants.map( restaurant => (\r\n                <li\r\n                    key={restaurant.id}\r\n                    className=\"list-group-item d-flex justify-content-between align-items-center\"\r\n                >\r\n                <span\r\n                  title={restaurant.name}\r\n                >\r\n                  {restaurant.name}\r\n                </span>\r\n                <span>\r\n                  <MDBBtn \r\n                    color=\"info\" \r\n                    // onClick={ () => {viewItem(dish);} }\r\n                >View</MDBBtn>\r\n                </span>\r\n              </li>\r\n            ));    \r\n        }\r\n    };\r\n\r\n    handleRandomClick = () => {\r\n        let randomIndex = Math.floor(Math.random() * this.places.length);        \r\n        let randomItem = this.places[randomIndex];\r\n\r\n        infowindow.close();\r\n        infowindow.setContent(randomItem.name);\r\n        infowindow.open(map,allMarkers[randomIndex]);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <MDBContainer>\r\n                <div className=\"map-box\" id={this.props.id} />\r\n                <MDBBtn\r\n                    color=\"info\"\r\n                    onClick={() => { if (this.getNextPage) this.getNextPage(); }}\r\n                >\r\n                    Search More\r\n                </MDBBtn>\r\n                <MDBBtn\r\n                    color=\"primary\"\r\n                    onClick={() => { this.handleRandomClick() }}\r\n                >\r\n                    Randomly Choose 1\r\n                </MDBBtn>\r\n                {this.displayRestaurants(this.places)}\r\n            </MDBContainer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GoogleMap;","import React, {useState, useRef, useEffect} from 'react';\r\nimport {\r\n    MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavbarToggler,\r\n    MDBCollapse, MDBNavItem, MDBNavLink,\r\n    MDBDropdown, MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem\r\n} from 'mdbreact';\r\nimport Logo from '../assets/img/logo_transparent.png';\r\nimport '../assets/css/navbar.css';\r\n\r\nconst MyNavbar = () => {\r\n    const [collapsed, setCollapsed] = useState(false);\r\n    const toggleCollapse = () => { setCollapsed(!collapsed); }   \r\n    \r\n    const node = useRef();\r\n\r\n    const handleClickOutside = e => {\r\n        if (node.current.contains(e.target)) {\r\n          // inside click\r\n          return;\r\n        }\r\n        // outside click\r\n        setCollapsed(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (collapsed) {\r\n          document.addEventListener(\"mousedown\", handleClickOutside);\r\n        } else {\r\n          document.removeEventListener(\"mousedown\", handleClickOutside);\r\n        }\r\n    \r\n        return () => {\r\n          document.removeEventListener(\"mousedown\", handleClickOutside);\r\n        };\r\n    }, [collapsed]);\r\n\r\n    return (\r\n        <div ref={node} >\r\n        <MDBNavbar color=\"stylish-color-dark\" fixed=\"top\" dark expand=\"md\" scrolling>\r\n        <MDBNavbarBrand href=\"home\">\r\n            <img  src={Logo} style={{ \r\n                height: '1.5rem',\r\n                width: '1.5rem',\r\n                \"marginBottom\": '0.5rem',\r\n                \"marginRight\": '0.5rem', }} alt=\"fireSpot\"/>\r\n            <strong className=\"white-text\">ZCK Website</strong>\r\n        </MDBNavbarBrand>\r\n        <MDBNavbarToggler onClick={() => {toggleCollapse()} } />\r\n        <MDBCollapse id=\"navbarCollapse\" isOpen={collapsed} navbar>\r\n            <MDBNavbarNav left>\r\n                <MDBNavItem>\r\n                    <MDBNavLink to={\"home\"}>\r\n                        <div onClick={ () => { setCollapsed(false) } }>\r\n                            <strong>Home</strong>\r\n                        </div>\r\n                    </MDBNavLink>\r\n                </MDBNavItem>\r\n                <MDBNavItem>\r\n                    <MDBNavLink to={\"projects\"}>\r\n                        <div onClick={ () => { setCollapsed(false) } }>\r\n                            <strong>Projects</strong>\r\n                        </div>\r\n                    </MDBNavLink>\r\n                </MDBNavItem>\r\n                <MDBNavItem>\r\n                    <MDBNavLink to={\"what-to-eat\"}>\r\n                        <div onClick={ () => { setCollapsed(false) } }>\r\n                            <strong>What To Eat!</strong>\r\n                        </div>\r\n                    </MDBNavLink>\r\n                </MDBNavItem>\r\n                <MDBNavItem>\r\n                    <MDBDropdown className=\"mydropdown\">\r\n                        <MDBDropdownToggle nav caret>\r\n                            <span className=\"mr-2\"><strong>Apps</strong></span>\r\n                        </MDBDropdownToggle>\r\n                        <MDBDropdownMenu className=\"mydropdown\">\r\n                            <MDBDropdownItem className=\"mydropdownitems\" href=\"#!\">More coming soon!</MDBDropdownItem>\r\n                        </MDBDropdownMenu>\r\n                    </MDBDropdown>\r\n                </MDBNavItem>\r\n            </MDBNavbarNav>\r\n        </MDBCollapse>\r\n    </MDBNavbar>\r\n    </div>\r\n\r\n    );\r\n}\r\n\r\nexport default MyNavbar;","import React from \"react\";\r\nimport { MDBContainer, MDBView, MDBRow, MDBCol, MDBIcon, MDBMask } from \"mdbreact\";\r\nimport HomePageImg from \"../../assets/img/homepage-img.jpg\";\r\nimport MyPhoto from \"../../assets/img/MyPhoto.jpeg\";\r\n\r\nconst HomePage = () => {\r\n    return (\r\n        <div>\r\n            <header>\r\n                <MDBView src={HomePageImg}>\r\n                    <MDBMask className=\"flex-center flex-column text-white text-center\">\r\n                        <h2>Hi I'm Zac, welcome to my website!</h2>\r\n                        <h5>Scroll down for more info!</h5>\r\n                    </MDBMask>\r\n                </MDBView>\r\n            </header>\r\n            <main>\r\n                <MDBContainer>\r\n                    <section className=\"my-5\">\r\n                        <h2 className=\"h1-responsive font-weight-bold text-center my-5\">\r\n                            About Me\r\n                        </h2>\r\n                        <p className=\"w-responsive text-center mx-auto mb-4\">\r\n                            My name is Zac Koh, I'm from Penang, Malaysia but currently based in Cambridge, UK.\r\n                            <br/>\r\n                            I am an aspiring software engineer that is currently on a graduate developer role with Barclays.\r\n                        </p>\r\n                        <h4 className=\"h5-responsive font-weight-bold text-center my-2\">My Goals for 2020:</h4>\r\n                        <ol className=\"w-responsive text-center mx-auto mb-5\">\r\n                            <li className=\"w-responsive text-center mx-auto\">\r\n                                Learn web development and deploy production-level code.\r\n                            </li>\r\n                            <li className=\"w-responsive text-center mx-auto\">\r\n                                Start with kaggle and participate in at least 2 competitions.\r\n                            </li>\r\n                        </ol>\r\n                        <MDBRow>\r\n                            <MDBCol lg=\"5\" className=\"mb-lg-0 mb-5\">\r\n                                <img\r\n                                    src={MyPhoto}\r\n                                    alt=\"Photograph of me\"\r\n                                    className=\"img-fluid rounded z-depth-3\"\r\n                                />\r\n                            </MDBCol>\r\n                            <MDBCol lg=\"7\">\r\n                                <MDBRow className=\"mb-3\">\r\n                                    <MDBCol md=\"1\" size=\"2\">\r\n                                        <MDBIcon icon=\"code\" size=\"2x\" className=\"indigo-text\" />\r\n                                    </MDBCol>\r\n                                    <MDBCol md=\"11\" size=\"10\">\r\n                                        <h5 className=\"font-weight-bold mb-3\">Technologies</h5>\r\n                                        <ul>\r\n                                            <li className=\"font-weight-bold\">Programming Languages</li>\r\n                                            <p className=\"mb-1\">\r\n                                                Python, JavaScript, C, C++, Java, Groovy\r\n                                            </p>\r\n                                            <li className=\"font-weight-bold\">Data Science/ML</li>\r\n                                            <p className=\"mb-1\">\r\n                                                PyTorch, Pandas, sklearn, numpy\r\n                                            </p>\r\n                                            <li className=\"font-weight-bold\">DevOps</li>\r\n                                            <p className=\"mb-1\">\r\n                                                Git, Bash, Nexus, Maven, TeamCity, Jenkins\r\n                                            </p>\r\n                                            <li className=\"font-weight-bold\">Web Development</li>\r\n                                            <p className=\"mb-1\">\r\n                                                django, React\r\n                                            </p>\r\n                                        </ul>\r\n                                    </MDBCol>\r\n                                </MDBRow>\r\n                                <MDBRow className=\"mb-3\">\r\n                                    <MDBCol md=\"1\" size=\"2\">\r\n                                        <MDBIcon icon=\"user-graduate\" size=\"2x\" className=\"pink-text\" />\r\n                                    </MDBCol>\r\n                                    <MDBCol md=\"11\" size=\"10\">\r\n                                        <h5 className=\"font-weight-bold mb-3\">Education</h5>\r\n                                        <p>\r\n                                            MEng Electronic Engineering with Artificial Intelligence<br/>\r\n                                            University of Southampton<br/>\r\n                                            <br/>\r\n                                            First Class Honours<br/>\r\n                                            Class of 2019\r\n                                        </p>\r\n                                    </MDBCol>\r\n                                </MDBRow>\r\n                                <MDBRow className=\"mb-3\">\r\n                                    <MDBCol md=\"1\" size=\"2\">\r\n                                        <MDBIcon icon=\"heart\" size=\"2x\" className=\"blue-text\" />\r\n                                    </MDBCol>\r\n                                    <MDBCol md=\"11\" size=\"10\">\r\n                                        <h5 className=\"font-weight-bold mb-3\">Interests</h5>\r\n                                        <p>\r\n                                        Cooking, Bouldering, Running\r\n                                        </p>\r\n                                    </MDBCol>\r\n                                </MDBRow>\r\n                            </MDBCol>\r\n                        </MDBRow>\r\n                    </section>\r\n                </MDBContainer>\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomePage;\r\n\r\n","import React from \"react\";\r\nimport {  MDBRow, MDBCol, MDBCard, MDBCardBody, MDBMask, MDBIcon, MDBView, MDBBtn } from \"mdbreact\";\r\nimport WebsiteScreenShot from \"../../assets/img/website-screenshot.jpg\";\r\nimport SceneClassifierScreenshot from \"../../assets/img/scene-classifier-screenshot.jpg\";\r\nimport \"../../assets/css/projectpage.css\";\r\n\r\nconst ProjectsPage = () => {\r\n  return (\r\n    <MDBCard className=\"my-5 px-5 pb-5 light-grey-background z-depth-0\">\r\n      <MDBCardBody>\r\n        <h2 className=\"h1-responsive font-weight-bold text-center my-5\">\r\n          My Recent Projects\r\n        </h2>\r\n        <p className=\"text-center w-responsive mx-auto mb-5\">\r\n          Below are a list of my recent projects that I've been working on. Please check them out!\r\n        </p>\r\n        <MDBRow>\r\n          <MDBCol lg=\"5\">\r\n            <MDBView className=\"rounded z-depth-2 mb-lg-0 mb-4\" hover waves>\r\n              <img\r\n                className=\"img-fluid\"\r\n                src={WebsiteScreenShot}\r\n                alt=\"\"\r\n              />\r\n              <a href=\"#!\">\r\n                <MDBMask overlay=\"white-slight\" />\r\n              </a>\r\n            </MDBView>\r\n          </MDBCol>\r\n          <MDBCol lg=\"7\">\r\n              <h6 className=\"font-weight-bold mb-3 brown-text\">\r\n                <MDBIcon fab icon=\"js-square\" className=\"pr-2\" />\r\n                Web Development\r\n              </h6>\r\n            <h3 className=\"font-weight-bold mb-3 p-0\">\r\n              <strong>My personal website and web app</strong>\r\n            </h3>\r\n            <p>\r\n              This is my first web development project which uses React. <br/>\r\n              My website contains a landing page, a projects page which displays my recent projects and a web app page.\r\n              <br/><br/>\r\n              My first web app (What To Eat!) helps the user to choose what to eat by randomly selecting a dish or a restaurant.\r\n            </p>\r\n            <p>\r\n              Technologies Used: React, Google Maps JavaScript API, Material Design for BootStrap (mdbootstrap)\r\n            </p>\r\n            <p>\r\n              Date: Nov 2019 - Feb 2020\r\n            </p>\r\n            <MDBBtn \r\n              color=\"brown\" size=\"md\" className=\"waves-light\" \r\n              href=\"https://github.com/zckoh/react-frontend\" target=\"_blank\"\r\n              style={{\"textTransform\": \"none\"}}>\r\n              GitHub Link (react-frontend)\r\n            </MDBBtn>\r\n          </MDBCol>\r\n        </MDBRow>\r\n        <hr className=\"my-5\" />\r\n        <MDBRow>\r\n          <MDBCol lg=\"7\">\r\n              <h6 className=\"font-weight-bold mb-3 pink-text\">\r\n                <MDBIcon icon=\"project-diagram\" className=\"pr-2\" />\r\n                Deep Learning\r\n              </h6>\r\n            <h3 className=\"font-weight-bold mb-3 p-0\">\r\n              <strong>Re-implementation of Music Transformer</strong>\r\n            </h3>\r\n            <p>\r\n              This is a group coursework for my deep learning module at university\r\n              where we re-implemented the Music Transformer paper that is published in ICLR 2019 conference.<br/>\r\n              <br/>\r\n              The re-implementation was attempted using PyTorch instead of TensorFlow. Unfortunately, we were unable\r\n              to re-implement the paper successfully, mainly due to insufficient details provided \r\n              for the JSB dataset and how the data was processed for the transformer model.\r\n              <br/><br/>\r\n              Nonetheless, it was a great learning experience developing this model.\r\n            </p>\r\n            <p>\r\n              Technologies Used: PyTorch, TensorFlow, Magenta, Jupyter Notebook, Python\r\n            </p>\r\n            <p>\r\n              Date: March 2019 - May 2019\r\n            </p>\r\n            <MDBBtn \r\n              color=\"pink\" size=\"md\" className=\"waves-light\" \r\n              href=\"https://github.com/COMP6248-Reproducability-Challenge/music-transformer-comp6248\" target=\"_blank\"\r\n              style={{\"textTransform\": \"none\"}}>\r\n              GitHub Link (music-transformer-comp6248)\r\n            </MDBBtn>\r\n          </MDBCol>\r\n          <MDBCol lg=\"5\">\r\n            <MDBView className=\"white-background rounded z-depth-2 mb-lg-0 mb-4\" hover waves>\r\n              <img\r\n                className=\"img-fluid center-photo\"\r\n                src=\"https://nlp.seas.harvard.edu/images/the-annotated-transformer_14_0.png\"\r\n                alt=\"\"\r\n              />\r\n              <a href=\"#!\">\r\n                <MDBMask overlay=\"white-slight\" />\r\n              </a>\r\n            </MDBView>\r\n          </MDBCol>\r\n        </MDBRow>\r\n        <hr className=\"my-5\" />\r\n        <MDBRow>\r\n          <MDBCol lg=\"5\">\r\n            <MDBView className=\"rounded z-depth-2 mb-lg-0 mb-4\" hover waves>\r\n              <img\r\n                className=\"img-fluid\"\r\n                src={SceneClassifierScreenshot}\r\n                alt=\"\"\r\n              />\r\n              <a href=\"#!\">\r\n                <MDBMask overlay=\"white-slight\" />\r\n              </a>\r\n            </MDBView>\r\n          </MDBCol>\r\n          <MDBCol lg=\"7\">\r\n\r\n              <h6 className=\"font-weight-bold mb-3 indigo-text\">\r\n                <MDBIcon icon=\"images\" className=\"pr-2\" />\r\n                Computer Vision\r\n              </h6>\r\n            <h3 className=\"font-weight-bold mb-3 p-0\">\r\n              <strong>Scene Classifier</strong>\r\n            </h3>\r\n            <p>\r\n              Classifies scene images into one of 15 categories.<br/>\r\n              <br/>\r\n              Three models have been implemented, with increasing complexity.<br/>\r\n              An additional model using transfer learning has also been implemented,\r\n              providing the best accuracy.\r\n            </p>\r\n            <ul>\r\n              <li>Run 1 - K-Nearest Neighbour classifier with “tiny image” feature.</li>\r\n              <li>Run 2 - 15 one-vs-all linear classifier with Bags-of-Visual-Words feature.</li>\r\n              <li>Run 3 - Dense SIFT with spatial pyramid matching using SVM classifier.</li>\r\n              <li>Run 4 - Transfer Learning with inception V3 model with additional pooling and softmax output layer as the top layers.</li>\r\n            </ul>\r\n            <p>\r\n              Technologies Used: Keras, OpenCV, scikit-learn, TensorFlow, Python\r\n            </p>\r\n            <p>\r\n              Date: Nov 2018 - Jan 2018\r\n            </p>\r\n            <MDBBtn \r\n              color=\"indigo\" size=\"md\" className=\"waves-light\" \r\n              href=\"https://github.com/zckoh/image-classifier\" target=\"_blank\"\r\n              style={{\"textTransform\": \"none\"}}>\r\n              GitHub Link (image-classifier)\r\n            </MDBBtn>\r\n          </MDBCol>\r\n        </MDBRow>\r\n      </MDBCardBody>\r\n    </MDBCard>\r\n  );\r\n}\r\n\r\nexport default ProjectsPage;","import React from 'react';\r\nconst Emoji = props => (\r\n    <span\r\n        className=\"emoji\"\r\n        role=\"img\"\r\n        aria-label={props.label ? props.label : \"\"}\r\n        aria-hidden={props.label ? \"false\" : \"true\"}\r\n    >\r\n        {props.symbol}\r\n    </span>\r\n);\r\nexport default Emoji;","import React from \"react\";\r\nimport GoogleMap from '../../../components/GoogleMap.js';\r\nimport '../../../assets/css/map.css';\r\n\r\nconst EatOutTab = () => {\r\n    return (\r\n        <div>\r\n            <h3>\r\n                Eating Out!\r\n            </h3>\r\n            <GoogleMap\r\n                id=\"myMap\"\r\n                options={{\r\n                center: { lat: 52.1942, lng: 0.1374 },\r\n                zoom: 14\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EatOutTab;","import React from \"react\";\r\n\r\nconst FoodDeliveryTab = () => {\r\n    return (\r\n        <h3>\r\n            Food delivery tab coming soon!\r\n        </h3>\r\n    );\r\n}\r\n\r\nexport default FoodDeliveryTab;\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport {\r\n    MDBBtn, MDBModal, MDBModalBody, MDBModalFooter, MDBModalHeader, MDBInput\r\n} from \"mdbreact\";\r\n\r\nconst DishViewModal = (props) => {\r\n    return (\r\n        <MDBModal isOpen={props.modal} toggle={props.toggle}>\r\n            <MDBModalHeader \r\n                toggle={props.toggle}\r\n                className='text-center'\r\n                titleClass='w-100 font-weight-bold'\r\n            >\r\n                { props.activeItem.name }\r\n            </MDBModalHeader>\r\n            <MDBModalBody>\r\n            <form className='mx-3 grey-text'>\r\n                <MDBInput\r\n                    disabled\r\n                    label='Dish Name'\r\n                    name=\"name\"\r\n                    group\r\n                    type='text'\r\n                    onChange={props.onChange}\r\n                    valueDefault={props.activeItem.name}\r\n                    validate\r\n                />\r\n                <MDBInput\r\n                    disabled\r\n                    type='textarea'\r\n                    name=\"additional_details\"\r\n                    rows='9'\r\n                    label='Additional Details'\r\n                    valueDefault={props.activeItem.additional_details}\r\n                    onChange={props.onChange}\r\n                />\r\n            </form>\r\n            </MDBModalBody>\r\n            <MDBModalFooter>\r\n            <MDBBtn color='secondary' onClick={props.toggle}>\r\n                Close\r\n            </MDBBtn>\r\n            </MDBModalFooter>\r\n        </MDBModal>\r\n    );\r\n}\r\n\r\n\r\nexport default DishViewModal;","import React from \"react\";\r\nimport {\r\n    MDBBtn, MDBModal, MDBModalBody, MDBModalFooter, MDBModalHeader\r\n} from \"mdbreact\";\r\n\r\nconst DishDeleteModal = (props) => {\r\n    // Create onClick function for delete\r\n    // must include props.toggle to close the modal\r\n    return (\r\n        <MDBModal isOpen={props.modal} toggle={props.toggle}>\r\n            <MDBModalHeader \r\n                toggle={props.toggle}\r\n                className='text-center'\r\n                titleClass='w-100 font-weight-bold'\r\n            >\r\n                Delete Dish: { props.activeItem.name }\r\n            </MDBModalHeader>\r\n            <MDBModalBody>\r\n                <h3>\r\n                    Are you sure you want to delete the following dish?\r\n                </h3>\r\n                <p>\r\n                Date Added: { props.activeItem.date_added }<br/>\r\n                Additional Details:<br/>\r\n                { props.activeItem.additional_details }\r\n                </p>\r\n            </MDBModalBody>\r\n            <MDBModalFooter>\r\n            <MDBBtn color=\"primary\" onClick={props.toggle}>\r\n                Back\r\n            </MDBBtn>\r\n            <MDBBtn color=\"danger\" onClick={props.onDelete}>\r\n                Delete\r\n            </MDBBtn>\r\n            </MDBModalFooter>\r\n        </MDBModal>\r\n    );\r\n}\r\n\r\n\r\nexport default DishDeleteModal;","import React from \"react\";\r\nimport {\r\n    MDBBtn, MDBInput, MDBModal, MDBModalBody, MDBModalFooter, MDBModalHeader\r\n} from \"mdbreact\";\r\n\r\nconst DishEditModal = (props) => {\r\n    // Create onClick function for delete\r\n    // must include props.toggle to close the modal\r\n    return (\r\n        <MDBModal isOpen={props.modal} toggle={props.toggle}>\r\n            <MDBModalHeader \r\n                toggle={props.toggle}\r\n                className='text-center'\r\n                titleClass='w-100 font-weight-bold'\r\n            >\r\n                Edit Dish: { props.activeItem.name }\r\n            </MDBModalHeader>\r\n            <MDBModalBody>\r\n            <form className='mx-3 grey-text'>\r\n                <MDBInput\r\n                    label='Dish Name'\r\n                    name=\"name\"\r\n                    group\r\n                    type='text'\r\n                    onChange={props.onChange}\r\n                    valueDefault={props.activeItem.name}\r\n                    validate\r\n                />\r\n                <MDBInput\r\n                    type='textarea'\r\n                    name=\"additional_details\"\r\n                    rows='3'\r\n                    label='Additional Details'\r\n                    valueDefault={props.activeItem.additional_details}\r\n                    onChange={props.onChange}\r\n                />\r\n            </form>\r\n            </MDBModalBody>\r\n            <MDBModalFooter>\r\n            <MDBBtn color=\"secondary\" onClick={props.toggle}>\r\n                Close\r\n            </MDBBtn>\r\n            <MDBBtn color=\"primary\" onClick={props.onSave}>\r\n                Update\r\n            </MDBBtn>\r\n            </MDBModalFooter>\r\n        </MDBModal>\r\n    );\r\n}\r\n\r\n\r\nexport default DishEditModal;","import React from \"react\";\r\nimport {\r\n    MDBBtn, MDBModal, MDBModalBody, MDBModalFooter, MDBModalHeader, MDBInput\r\n} from \"mdbreact\";\r\n\r\nconst RandomDishModal = (props) => {\r\n    return (\r\n        <MDBModal isOpen={props.modal} toggle={props.toggle}>\r\n            <MDBModalHeader \r\n                toggle={props.toggle}\r\n                className='text-center'\r\n                titleClass='w-100 font-weight-bold'\r\n            >\r\n                { props.activeItem.name }\r\n            </MDBModalHeader>\r\n            <MDBModalBody>\r\n            <form className='mx-3 grey-text'>\r\n                <MDBInput\r\n                    disabled\r\n                    label='Dish Name'\r\n                    name=\"name\"\r\n                    group\r\n                    type='text'\r\n                    onChange={props.onChange}\r\n                    value={props.activeItem.name}\r\n                    validate\r\n                />\r\n                <MDBInput\r\n                    disabled\r\n                    type='textarea'\r\n                    name=\"additional_details\"\r\n                    rows='9'\r\n                    label='Additional Details'\r\n                    value={props.activeItem.additional_details}\r\n                    onChange={props.onChange}\r\n                />\r\n            </form>\r\n            </MDBModalBody>\r\n            <MDBModalFooter>\r\n            <MDBBtn color='secondary' onClick={props.toggle}>\r\n                Close\r\n            </MDBBtn>\r\n            <MDBBtn color='green' onClick={props.onRandomClick}>\r\n                Reroll\r\n            </MDBBtn>\r\n            </MDBModalFooter>\r\n        </MDBModal>\r\n    );\r\n}\r\n\r\n\r\nexport default RandomDishModal;","const CookingDishes = [\n    {\n        id: 1,\n        name: \"Rougaille with meat\",\n        additional_details: \"Thyme, tomatoes, onion, red pasta sauce, meat\\\n            \\r\\n\\r\\nPossible meat options:\\\n            \\r\\n- Sausage\\\n            \\r\\n- Salmon\\\n            \\r\\n- Beef\\\n            \\r\\n- Pork\\\n            \\r\\n- Chicken\",\n        date_added: \"2020-01-11\"\n    },\n    {\n        id: 2,\n        name: \"Coca-Cola Chicken Wings\",\n        additional_details: \"Coca-cola, chicken wings, ginger, soy sauce, sesame seeds\",\n        date_added: \"2020-01-12\"\n    },\n    {\n        id: 3,\n        name: \"Pad Thai\",\n        additional_details: \"Rice noodles, carrots, chives, eggs, garlic, onion\\\n            \\r\\n\\r\\nPossible meat options:\\\n            \\r\\n- Chicken\\\n            \\r\\n- Beef\",\n        date_added: \"2020-01-12\"\n    },\n    {\n        id: 4,\n        name: \"Fried Rice\",\n        additional_details: \"Rice, carrots, onion, , eggs, garlic, onion \\\n            \\r\\n\\r\\nPossible meat options:\\\n            \\r\\n- Chicken\\\n            \\r\\n- Beef\\\n            \\r\\n- Bacon\\\n            \\r\\n- Spam\",\n        date_added: \"2020-01-12\"\n    },\n    {\n        id: 5,\n        name: \"Tomato Eggs\",\n        additional_details: \"Tomatoes, Eggs, Spring Onions, Ketchup, Cornstarch\",\n        date_added: \"2020-01-12\"\n    },\n    {\n        id: 6,\n        name: \"Steamed Eggs\",\n        additional_details: \"Eggs, Water (Ratio 1:1)\",\n        date_added: \"2020-01-12\"\n    },\n    {\n        id: 7,\n        name: \"Three Cup Chicken\",\n        additional_details: \"Boneless chicken thighs, Basil, Ginger, Garlic (in cloves)\\\n        \\r\\n\\r\\nSauce:\\\n        \\r\\n- Soy Sauce\\\n        \\r\\n- Shao Xing Wine\\\n        \\r\\n- Sesame Oil\\\n        \\r\\n- Sugar\",\n        date_added: \"2020-01-12\"\n    },\n    {\n        id: 8,\n        name: \"Soybean Paste Stew (Doenjang jjigae)\",\n        additional_details: \"Soybean Paste, Potatoes, Onions, Garlic, Courgette \\\n            \\r\\n\\r\\nPossible meat options:\\\n            \\r\\n- Pork (preferrably Pork Belly)\\\n            \\r\\n- Bacon\\\n            \\r\\n- Spam\\\n            \\r\\n- Sausage\",\n        date_added: \"2020-01-12\"\n    },\n    {\n        id: 9,\n        name: \"Red Rice Braised Pork\",\n        additional_details: \"Pork Belly, Stiff Tofu (Teowkun)\\\n        \\r\\n\\r\\nSpices/Seasoning:\\\n        \",\n        date_added: \"2020-01-12\"\n    },\n    {\n        id: 10,\n        name: \"Beer Pork Belly\",\n        additional_details: \"Pork belly, beer\\\n            \\r\\n\\r\\nSpices:\\\n            \\r\\nBay leaves, star anise, dried chili, ginger, spring onions\\\n            \\r\\n\\r\\nSauce:\\\n            \\r\\n- Oyster Sauce\\\n            \\r\\n- Shao Xing Wine\\\n            \\r\\n- Soy Sauce\",\n        date_added: \"2020-01-12\"\n    },\n    {\n        id: 11,\n        name: \"Hand Pulled Noodles (Ken Ter Pan)\",\n        additional_details: \"Flour, Spring Onion, Chives, Garlic, Eggs \\\n        \\r\\n\\r\\nPossible meat options:\\\n        \\r\\n- Salmon\\\n        \\r\\n- Minced Beef\\\n        \\r\\n- Side with Gyoza\\\n        \\r\\n- Chicken\",\n        date_added: \"2020-01-12\"\n    },\n    {\n        id: 12,\n        name: \"Lasagne\",\n        additional_details: \"Lasagne Sheets, Red Sauce, White Sauce, Cheese, Peppers, Carrots, Onions \\\n        \\r\\n\\r\\nPossible meat options:\\\n        \\r\\n- Minced Beef\\\n        \\r\\n- Chicken\",\n        date_added: \"2020-01-12\"\n    },\n    {\n        id: 13,\n        name: \"Baked Chicken in Oven\",\n        additional_details: \"Chicken Thighs/Drumsticks, Seasoning bag\",\n        date_added: \"2020-01-12\"\n    },\n    {\n        id: 14,\n        name: \"Kimbap\",\n        additional_details: \"Seaweed Sheets, Short Grain Rice, Sesame Oil, Rice Wine Vinegar\\\n        \\r\\n\\r\\nPossible filling options:\\\n        \\r\\n- Carrots\\\n        \\r\\n- Spinach\\\n        \\r\\n- Beef\\\n        \\r\\n- Egg\\\n        \\r\\n- Pickled Radish\\\n        \\r\\n- Chicken\",\n        date_added: \"2020-01-12\"\n    },\n    {\n        id: 15,\n        name: \"Carbonara Pasta\",\n        additional_details: \"Pasta, Egg, Cheese, Thyme, Salt, Pepper\\\n        \\r\\n\\r\\nPossible meat options:\\\n        \\r\\n- Bacon\\\n        \\r\\n- Spam\",\n        date_added: \"2020-01-12\"\n    },\n    {\n        id: 16,\n        name: \"Noodle Soup\",\n        additional_details: \"Noodles, Carrots, Onions\\\n        \\r\\n\\r\\nPossible meat options:\\\n        \\r\\n- Chicken\\\n        \\r\\n- Dumplings\\\n        \\r\\n- Side with Gyoza\",\n        date_added: \"2020-01-12\"\n    },\n];\n\nexport default CookingDishes","import React, { useState } from \"react\";\r\nimport {\r\n    MDBContainer,\r\n    MDBBtn, MDBInput, MDBModal, MDBModalBody, MDBModalFooter, MDBModalHeader\r\n} from \"mdbreact\";\r\n\r\nimport DishViewModal from \"../../../components/DishViewModal.js\";\r\nimport DishDeleteModal from \"../../../components/DishDeleteModal.js\";\r\nimport DishEditModal from \"../../../components/DishEditModal.js\";\r\nimport RandomDishModal from \"../../../components/RandomDishModal.js\";\r\n\r\n\r\nimport CookingDishes from \"./CookingDishes\";\r\n\r\nconst CookTab = () => {\r\n    const [addDishesModal, setAddDishesModal] = useState(false);\r\n    const toggleAddDishesModal = () => { setAddDishesModal(!addDishesModal); }\r\n\r\n    const [activeItem, setActiveItem] = useState(\r\n        {\r\n            id: \"\",\r\n            name: \"\",\r\n            additional_details: \"\",\r\n            date_added: \"\"\r\n        }\r\n    );\r\n\r\n    const [viewItemModal, setViewItemModal] = useState(false);\r\n    const toggleViewItemModal = () => { setViewItemModal(!viewItemModal); }    \r\n\r\n    const viewItem = item => {\r\n        toggleViewItemModal();\r\n        setActiveItem(item);\r\n    };\r\n\r\n    const [deleteItemModal, setDeleteItemModal] = useState(false);\r\n    const toggleDeleteItemModal = () => { setDeleteItemModal(!deleteItemModal); }    \r\n\r\n    const deleteItem = item => {\r\n        toggleDeleteItemModal();\r\n        setActiveItem(item);\r\n    };\r\n\r\n    const [editItemModal, setEditItemModal] = useState(false);\r\n    const toggleEditItemModal = () => { setEditItemModal(!editItemModal); }    \r\n\r\n    const editItem = item => {\r\n        toggleEditItemModal();\r\n        setActiveItem(item);\r\n    };\r\n\r\n    const [randomItemModal, setRandomItemModal] = useState(false);\r\n    const toggleRandomItemModal = () => { setRandomItemModal(!randomItemModal); }    \r\n\r\n    const handleRandomClick = () => {\r\n        let randomItem = CookingDishes[Math.floor(Math.random() * CookingDishes.length)];\r\n        setActiveItem(randomItem);\r\n    }\r\n\r\n    const viewRandomItem = () => {\r\n        handleRandomClick();\r\n        toggleRandomItemModal();\r\n    }\r\n\r\n    const DisplayDishes = dishes => {    \r\n        return dishes.map(dish => (\r\n            <li\r\n                key={dish.id}\r\n                className=\"list-group-item d-flex justify-content-between align-items-center\"\r\n            >\r\n            <span\r\n              title={dish.name}\r\n            >\r\n              {dish.name}\r\n            </span>\r\n            <span>\r\n              <MDBBtn color=\"info\" onClick={ () => {viewItem(dish);} }>View</MDBBtn>\r\n              {/* <MDBBtn color=\"warning\" onClick={ () => {editItem(dish);} }>Edit</MDBBtn>\r\n              <MDBBtn color=\"danger\" onClick={ () => {deleteItem(dish);} }>Delete</MDBBtn> */}\r\n            </span>\r\n          </li>\r\n        ));\r\n    };\r\n\r\n    const handleChange = e => {\r\n        let { name, value } = e.target;\r\n        setActiveItem({ ...activeItem, [name]: value });\r\n        console.log(activeItem);\r\n    };\r\n\r\n    const onSave = (item, entireList) => {\r\n        item.id=entireList[entireList.length-1].id + 1\r\n        entireList.push(item);\r\n        toggleAddDishesModal();\r\n    };\r\n\r\n    const onDelete = (item, entireList) => {\r\n        let index = entireList.indexOf(item);\r\n        entireList.splice(index,1);\r\n        toggleDeleteItemModal();\r\n    }\r\n\r\n    const handleEdit = (item, entireList) => {\r\n        let index = entireList.indexOf(item);\r\n        entireList[index]=item;\r\n        toggleEditItemModal();\r\n    };\r\n\r\n    return (\r\n        <MDBContainer>\r\n            <h3>\r\n                Cook at home!\r\n            </h3>\r\n            <MDBContainer fluid>\r\n                {/* <MDBBtn\r\n                    color=\"primary\"\r\n                    onClick={ () => { toggleAddDishesModal();} }\r\n                    style={{ \"textTransform\": \"none\" }}\r\n                >\r\n                    Add a New Dish\r\n                </MDBBtn> */}\r\n                <MDBBtn\r\n                    color=\"green\" \r\n                    style={{ \"textTransform\": \"none\" }}\r\n                    onClick={ () => { viewRandomItem(); }}\r\n                >\r\n                    Randomly Choose a Dish\r\n                </MDBBtn>\r\n            </MDBContainer>\r\n            {DisplayDishes(CookingDishes)}\r\n            <RandomDishModal\r\n                activeItem={activeItem}\r\n                toggle={toggleRandomItemModal}\r\n                modal={randomItemModal}\r\n                onRandomClick={ () => { handleRandomClick() } }            \r\n            />\r\n            <DishViewModal\r\n                activeItem={activeItem}\r\n                toggle={toggleViewItemModal}\r\n                modal={viewItemModal}\r\n            />\r\n            <DishDeleteModal\r\n                activeItem={activeItem}\r\n                toggle={toggleDeleteItemModal}\r\n                modal={deleteItemModal}\r\n                onDelete={ () => {onDelete(activeItem, CookingDishes)} }\r\n            />\r\n            <DishEditModal\r\n                activeItem={activeItem}\r\n                toggle={toggleEditItemModal}\r\n                modal={editItemModal}\r\n                onSave={ () => {handleEdit(activeItem, CookingDishes)} }\r\n                onChange={handleChange}\r\n            />\r\n            <MDBModal isOpen={addDishesModal} toggle={ () => { toggleAddDishesModal();} }>\r\n                <MDBModalHeader \r\n                    toggle={() => { toggleAddDishesModal();} }\r\n                    className='text-center'\r\n                    titleClass='w-100 font-weight-bold'\r\n                >\r\n                    Add a New Dish\r\n                </MDBModalHeader>\r\n                <MDBModalBody>\r\n                    <form className='mx-3 grey-text'>\r\n                        <MDBInput\r\n                            label='Dish Name'\r\n                            name=\"name\"\r\n                            group\r\n                            type='text'\r\n                            onChange={handleChange}\r\n                            validate\r\n                        />\r\n                        <MDBInput\r\n                            type='textarea'\r\n                            name=\"additional_details\"\r\n                            rows='3'\r\n                            label='Additional Details'\r\n                            onChange={handleChange}\r\n                        />\r\n                    </form>\r\n                </MDBModalBody>\r\n                <MDBModalFooter>\r\n                    <MDBBtn color='secondary' onClick={ () => { toggleAddDishesModal();} }>\r\n                        Close\r\n                    </MDBBtn>\r\n                    <MDBBtn color='primary' onClick={ () => onSave(activeItem, CookingDishes)}>Save</MDBBtn>\r\n                </MDBModalFooter>\r\n            </MDBModal>\r\n        </MDBContainer>\r\n    );\r\n}\r\n\r\nexport default CookTab;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n    MDBContainer, MDBBtn, MDBCollapse\r\n} from \"mdbreact\";\r\nimport Emoji from '../../components/Emoji.js';\r\nimport EatOutTab from './Tabs/EatOutTab.js';\r\nimport FoodDeliveryTab from './Tabs/FoodDeliveryTab.js';\r\nimport CookTab from './Tabs/CookTab.js';\r\n\r\n\r\nconst WhatToEatPage = () => {\r\n    const [whichIsOpen, setWhichIsOpen] = useState(\"\");\r\n    const [collapseCloseSpeed, setcollapseCloseSpeed] = useState(0);\r\n\r\n    const [cookingIsOpen, setCookingIsOpen] = useState(false);\r\n    const toggleCooking = () => setCookingIsOpen(!cookingIsOpen);\r\n\r\n    const [foodDeliveryIsOpen, setFoodDeliveryIsOpen] = useState(false);\r\n    const toggleFoodDelivery = () => setFoodDeliveryIsOpen(!foodDeliveryIsOpen);\r\n\r\n    const [eatOutiIsOpen, setEatOutIsOpen] = useState(false);\r\n    const toogleEatOut = () => setEatOutIsOpen(!eatOutiIsOpen);\r\n\r\n    const openCookingCollapse = () => {\r\n        toggleCooking();\r\n        setWhichIsOpen(\"Cooking\");\r\n        setFoodDeliveryIsOpen(false);\r\n        setEatOutIsOpen(false);\r\n    }\r\n\r\n    const openFoodDeliveryCollapse = () => {\r\n        setCookingIsOpen(false);\r\n        toggleFoodDelivery();\r\n        setWhichIsOpen(\"Food Delivery\");\r\n        setEatOutIsOpen(false);\r\n    }\r\n\r\n    const openEatOutCollapse = () => {\r\n        setCookingIsOpen(false);\r\n        setFoodDeliveryIsOpen(false);\r\n        toogleEatOut();\r\n        setWhichIsOpen(\"Eat Out\");\r\n    }\r\n\r\n    const setCloseCollapseSpeed = (id) => {\r\n        if (id.trim() === whichIsOpen.trim()) {\r\n            setcollapseCloseSpeed(1500);\r\n        } else {\r\n            setcollapseCloseSpeed(0);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <MDBContainer fluid className=\"my-5 pb-5 pt-5 text-center justify-content-center\">\r\n            <h1>What To Eat!</h1>\r\n            <MDBContainer fluid>\r\n                <MDBBtn\r\n                    color=\"dark\"\r\n                    onClick={() => { openCookingCollapse(); setCloseCollapseSpeed(\"Cooking\");}}\r\n                    style={{ marginBottom: \"1rem\", \"textTransform\": \"none\" }}\r\n                >\r\n                    Cook? (Save <Emoji symbol=\"💲💲\" />)\r\n                </MDBBtn>\r\n                <MDBBtn\r\n                    color=\"purple\"\r\n                    onClick={() => { openFoodDeliveryCollapse(); setCloseCollapseSpeed(\"Food Delivery\");}}\r\n                    style={{ marginBottom: \"1rem\", \"textTransform\": \"none\" }}\r\n                >\r\n                    Food Delivery? (Spend <Emoji symbol=\"💲💲\" />)\r\n                </MDBBtn>\r\n                <MDBBtn\r\n                    size=\"large\"\r\n                    color=\"blue\"\r\n                    onClick={() => { openEatOutCollapse(); setCloseCollapseSpeed(\"Eat Out\");}}\r\n                    style={{ marginBottom: \"1rem\", \"textTransform\": \"none\" }}\r\n                >\r\n                    Eat Out? (Spend <Emoji symbol=\"💲💲\" />)\r\n                </MDBBtn>\r\n                <MDBCollapse id=\"eatingInCollapse\" delay={{hide: collapseCloseSpeed}} isOpen={cookingIsOpen}>\r\n                    <CookTab />\r\n                </MDBCollapse>\r\n                <MDBCollapse id=\"eatingOutCollapse\" delay={{hide: collapseCloseSpeed}} isOpen={eatOutiIsOpen}>\r\n                    <EatOutTab />\r\n                </MDBCollapse>\r\n                <MDBCollapse id=\"foodDeliveryCollapse\" delay={{hide: collapseCloseSpeed}} isOpen={foodDeliveryIsOpen}>\r\n                    <FoodDeliveryTab />\r\n                </MDBCollapse>\r\n            </MDBContainer>\r\n        </MDBContainer>\r\n    );\r\n}\r\n\r\nexport default WhatToEatPage;","import React from \"react\";\r\nimport {\r\n    MDBContainer, MDBBtn\r\n} from \"mdbreact\";\r\n\r\nconst Error404Page = () => {\r\n    return (\r\n        <MDBContainer fluid className=\"my-5 pb-5 pt-5 text-center justify-content-center\">\r\n            <h1 className=\"h1-responsive font-weight-bold\">404</h1>\r\n            <h2 className=\"h2-responsive\">Page Not Found!</h2>\r\n            <MDBBtn\r\n                color=\"primary\"\r\n                href=\"https://zckoh.github.io\"\r\n            >\r\n                Back to homepage\r\n            </MDBBtn>\r\n        </MDBContainer>\r\n    );\r\n}\r\n\r\nexport default Error404Page;","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport MyNavBar from './components/Navbar.js';\nimport HomePage from './views/Home/HomePage.js';\nimport ProjectsPage from './views/Projects/ProjectsPage.js';\nimport WhatToEatPage from './views/WhatToEat/WhatToEatPage.js';\nimport Error404Page from './views/Error404Page';\n\nfunction App() {\n    return (\n        <div className=\"content\">\n            <Router>\n                <MyNavBar />\n                <Switch>\n                    <Route exact path=\"/home\" component={HomePage} />\n                    <Route exact path=\"/projects\" component={ProjectsPage} />\n                    <Route exact path=\"/what-to-eat\" component={WhatToEatPage} />\n                    <Route exact path=\"/\" component={HomePage} />\n                    <Route component={Error404Page} />\n                </Switch>\n            </Router>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\r\nimport { MDBFooter, MDBIcon, MDBContainer, MDBBtn } from 'mdbreact';\r\nimport Emoji from '../components/Emoji.js';\r\nimport \"../assets/css/footer.css\";\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <MDBFooter color=\"stylish-color-dark\" className=\"font-small pt-4 mt-4 footer\">\r\n            <MDBContainer fluid className=\"text-center d-flex justify-content-center\">\r\n                <h5 className=\"title\">Contact Details</h5>\r\n            </MDBContainer>\r\n            <MDBContainer id=\"contacts-container\" fluid className=\"text-center justify-content-center\">\r\n                <MDBBtn size=\"lg\" href=\"https://github.com/zckoh\" target=\"_blank\" id=\"github-button\">\r\n                    <MDBIcon fab icon=\"github\" className=\"pr-1\" /> Github\r\n                </MDBBtn>\r\n                <MDBBtn size=\"lg\" href=\"http://www.linkedin.com/in/zackoh\" target=\"_blank\" id=\"linkedin-button\">\r\n                    <MDBIcon fab icon=\"linkedin-in\" className=\"pr-1\" /> Linkedin\r\n                </MDBBtn>\r\n                <MDBBtn size=\"lg\" href=\"mailto:zckoh96@gmail.com\" id=\"email-button\" color=\"grey\">\r\n                    <MDBIcon icon=\"envelope\" className=\"pr-1\" /> Email\r\n                </MDBBtn>\r\n            </MDBContainer>\r\n            <div className=\"footer-copyright text-center py-3 d-flex justify-content-center\">\r\n                <MDBContainer fluid>\r\n                    &copy; {new Date().getFullYear()} Copyright: Created by Zac with <Emoji symbol=\"🧡\" />\r\n                </MDBContainer>\r\n            </div>\r\n        </MDBFooter>\r\n    );\r\n}\r\n\r\nexport default Footer;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport './index.css';\nimport App from './App';\nimport Footer from \"./components/Footer\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render( [<App key=\"1\"/>, <Footer key=\"2\"/>] , document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}